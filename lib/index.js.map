{"version":3,"file":"index.js","mappingsmBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA;AACA;AAWA;AACA;AAEA;AAQA;AACA;AACA;AAEA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvNA;AACA;AACA;AAEA;AASA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAYA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AApEA;AAsEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;;;;AAIA;;;;;;AAMA;AACA;AAAA;AACA;;;;;;;;;AASA;;;;AAIA;;;;;;AAMA;AACA;AACA;;AAEA;AACA;AApDA;AAsDA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AArBA;AAuBA;;;;;;AAMA;AACA;AACA;AACA;AAFA;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAEA;;AAEA;;;;;AAKA;;;;;AAKA;AACA;;;;;AAKA;;;;AAIA;;;AAGA;;;;;;AAMA;;;;;AAKA;AACA;AAxCA;AA0CA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;AAOA;;;;AAIA;;;;;;;;;AASA;AAxBA;AA0BA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AAbA;AAeA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AAKA;;;;;AAKA;;;;;AAKA;AACA;AAxxWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AE7BA;AACA;AACA;AACA","sources":["../webpack://jira-lint/./src/constants.ts","../webpack://jira-lint/./src/main.ts","../webpack://jira-lint/./src/utils.ts","../webpack://jira-lint/webpack/bootstrap","../webpack://jira-lint/webpack/before-startup","../webpack://jira-lint/webpack/startup","../webpack://jira-lint/webpack/after-startup"],"sourcesContent":["/** Hidden marker to add to PR description. */\nexport const HIDDEN_MARKER = 'added_by_jira_lint';\n\n/** Regex to check for the hidden marker in PR description to avoid adding jira-lint PR details\n * multiple times. */\nexport const MARKER_REGEX = new RegExp(HIDDEN_MARKER);\n\n/**\n * Bot branch patters to avoid running jira-lint on.\n */\nexport const BOT_BRANCH_PATTERNS: RegExp[] = [/^dependabot/, /^all-contributors/];\n\n/**\n * Default branch patterms to skip CI. Skip jira-lint when the HEAD ref matches one of these.\n */\nexport const DEFAULT_BRANCH_PATTERNS: RegExp[] = [/^master$/, /^production$/, /^gh-pages$/];\n\n/**\n * Regex to match JIRA issue keys.\n */\nexport const JIRA_REGEX_MATCHER = /\\d+-(([A-Z0-9]{1,10})|[a-z0-9]{1,10})/g;\n\n/**\n * Default total maximum number of additions after which jira-lint will discourage the PR as it is\n * considered \"too huge to review\".\n */\nexport const DEFAULT_PR_ADDITIONS_THRESHOLD = 800;\n","import * as core from '@actions/core';\nimport * as github from '@actions/github';\nimport { Octokit, RestEndpointMethodTypes } from '@octokit/rest';\n\nimport {\n  addComment,\n  addLabels,\n  getHotfixLabel,\n  getHugePrComment,\n  getJIRAClient,\n  getJIRAIssueKeys,\n  getNoIdComment,\n  getPRDescription,\n  getPRTitleComment,\n  isHumongousPR,\n  isNotBlank,\n  shouldSkipBranchLint,\n  shouldUpdatePRDescription,\n  updatePrDetails,\n  isIssueStatusValid,\n  getInvalidIssueStatusComment,\n} from './utils';\nimport { PullRequestParams, JIRADetails, JIRALintActionInputs } from './types';\nimport { DEFAULT_PR_ADDITIONS_THRESHOLD } from './constants';\n\nconst getInputs = (): JIRALintActionInputs => {\n  const JIRA_TOKEN: string = core.getInput('jira-token', { required: true });\n  const JIRA_BASE_URL: string = core.getInput('jira-base-url', { required: true });\n  const GITHUB_TOKEN: string = core.getInput('github-token', { required: true });\n  const BRANCH_IGNORE_PATTERN: string = core.getInput('skip-branches', { required: false }) || '';\n  const SKIP_COMMENTS: boolean = core.getInput('skip-comments', { required: false }) === 'true';\n  const PR_THRESHOLD = parseInt(core.getInput('pr-threshold', { required: false }), 10);\n  const VALIDATE_ISSUE_STATUS: boolean = core.getInput('validate_issue_status', { required: false }) === 'true';\n  const ALLOWED_ISSUE_STATUSES: string = core.getInput('allowed_issue_statuses');\n\n  return {\n    JIRA_TOKEN,\n    GITHUB_TOKEN,\n    BRANCH_IGNORE_PATTERN,\n    SKIP_COMMENTS,\n    PR_THRESHOLD: isNaN(PR_THRESHOLD) ? DEFAULT_PR_ADDITIONS_THRESHOLD : PR_THRESHOLD,\n    JIRA_BASE_URL: JIRA_BASE_URL.endsWith('/') ? JIRA_BASE_URL.replace(/\\/$/, '') : JIRA_BASE_URL,\n    VALIDATE_ISSUE_STATUS,\n    ALLOWED_ISSUE_STATUSES,\n  };\n};\n\nasync function run(): Promise<void> {\n  try {\n    const {\n      JIRA_TOKEN,\n      JIRA_BASE_URL,\n      GITHUB_TOKEN,\n      BRANCH_IGNORE_PATTERN,\n      SKIP_COMMENTS,\n      PR_THRESHOLD,\n      VALIDATE_ISSUE_STATUS,\n      ALLOWED_ISSUE_STATUSES,\n    } = getInputs();\n\n    const defaultAdditionsCount = 800;\n    const prThreshold: number = PR_THRESHOLD ? Number(PR_THRESHOLD) : defaultAdditionsCount;\n\n    const {\n      payload: {\n        repository,\n        organization: { login: owner },\n        pull_request: pullRequest,\n      },\n    } = github.context;\n\n    if (typeof repository === 'undefined') {\n      throw new Error(`Missing 'repository' from github action context.`);\n    }\n\n    const { name: repo } = repository;\n\n    const {\n      base: { ref: baseBranch },\n      head: { ref: headBranch },\n      number: prNumber = 0,\n      body: prBody = '',\n      additions = 0,\n      title = '',\n    } = pullRequest as PullRequestParams;\n\n    // common fields for both issue and comment\n    const commonPayload = {\n      owner,\n      repo,\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      issue_number: prNumber,\n    };\n\n    // github client with given token\n    //const client: github.GitHub = new github.GitHub(GITHUB_TOKEN);\n\n    const client: Octokit = new Octokit({ auth: GITHUB_TOKEN});\n    \n    if (!headBranch && !baseBranch) {\n      const commentBody = 'jira-lint is unable to determine the head and base branch';\n      const comment: RestEndpointMethodTypes['issues']['createComment']['parameters'] = {\n        ...commonPayload,\n        body: commentBody,\n      };\n      await addComment(client, comment);\n\n      core.setFailed('Unable to get the head and base branch');\n      process.exit(1);\n    }\n\n    console.log('Base branch -> ', baseBranch);\n    console.log('Head branch -> ', headBranch);\n\n    if (shouldSkipBranchLint(headBranch, BRANCH_IGNORE_PATTERN)) {\n      process.exit(0);\n    }\n\n    const issueKeys = getJIRAIssueKeys(headBranch);\n    if (!issueKeys.length) {\n      const comment: RestEndpointMethodTypes['issues']['createComment']['parameters'] = {\n        ...commonPayload,\n        body: getNoIdComment(headBranch),\n      };\n      await addComment(client, comment);\n\n      core.setFailed('JIRA issue id is missing in your branch.');\n      process.exit(1);\n    }\n\n    // use the last match (end of the branch name)\n    const issueKey = issueKeys[issueKeys.length - 1];\n    console.log(`JIRA key -> ${issueKey}`);\n\n    const { getTicketDetails } = getJIRAClient(JIRA_BASE_URL, JIRA_TOKEN);\n    const details: JIRADetails = await getTicketDetails(issueKey);\n    if (details.key) {\n      const podLabel = details?.project?.name || '';\n      const hotfixLabel: string = getHotfixLabel(baseBranch);\n      const typeLabel: string = details?.type?.name || '';\n      const labels: string[] = [podLabel, hotfixLabel, typeLabel].filter(isNotBlank);\n      console.log('Adding lables -> ', labels);\n\n      await addLabels(client, {\n        ...commonPayload,\n        labels,\n      });\n\n      if (shouldUpdatePRDescription(prBody || '')) {\n        const prData: RestEndpointMethodTypes['pulls']['update']['parameters'] = {\n          owner,\n          repo,\n          // eslint-disable-next-line @typescript-eslint/camelcase\n          pull_number: prNumber,\n          body: getPRDescription(prBody || '', details),\n        };\n        await updatePrDetails(client, prData);\n\n        // add comment for PR title\n        if (!SKIP_COMMENTS) {\n          const prTitleComment: RestEndpointMethodTypes['issues']['createComment']['parameters'] = {\n            ...commonPayload,\n            body: getPRTitleComment(details.summary, title),\n          };\n          console.log('Adding comment for the PR title');\n          addComment(client, prTitleComment);\n\n          // add a comment if the PR is huge\n          if (isHumongousPR(additions, prThreshold)) {\n            const hugePrComment: RestEndpointMethodTypes['issues']['createComment']['parameters']  = {\n              ...commonPayload,\n              body: getHugePrComment(additions, prThreshold),\n            };\n            console.log('Adding comment for huge PR');\n            addComment(client, hugePrComment);\n          }\n        }\n      } else{\n        console.log('PR description is already updated');\n      }\n\n      if (!isIssueStatusValid(VALIDATE_ISSUE_STATUS, ALLOWED_ISSUE_STATUSES.split(','), details)) {\n        const invalidIssueStatusComment: RestEndpointMethodTypes['issues']['createComment']['parameters']  = {\n          ...commonPayload,\n          body: getInvalidIssueStatusComment(details, ALLOWED_ISSUE_STATUSES),\n        };\n        console.log('Adding comment for invalid issue status');\n        await addComment(client, invalidIssueStatusComment);\n\n        core.setFailed('The found jira issue does is not in acceptable statuses');\n        process.exit(1);\n      }\n\n    } else {\n      const comment: RestEndpointMethodTypes['issues']['createComment']['parameters']  = {\n        ...commonPayload,\n        body: getNoIdComment(headBranch),\n      };\n      await addComment(client, comment);\n\n      core.setFailed('Invalid JIRA key. Please create a branch with a valid JIRA issue key.');\n      process.exit(1);\n    }\n  } catch (error) {\n    console.log({ error });\n    if (error instanceof ReferenceError) {\n      core.setFailed(error.message);\n    }\n    process.exit(1);\n  }\n\n  console.log('JIRA linting is successful!');\n  process.exit(0);\n}\n\nrun();\n","import axios from 'axios';\r\nimport * as core from '@actions/core';\r\nimport similarity from 'string-similarity';\r\nimport { Octokit, RestEndpointMethodTypes } from '@octokit/rest';\r\nimport {\r\n  MARKER_REGEX,\r\n  BOT_BRANCH_PATTERNS,\r\n  DEFAULT_BRANCH_PATTERNS,\r\n  JIRA_REGEX_MATCHER,\r\n  HIDDEN_MARKER,\r\n} from './constants';\r\nimport { JIRA, JIRADetails, JIRAClient } from './types';\r\n\r\nexport const isBlank = (input: string): boolean => input.trim().length === 0;\r\nexport const isNotBlank = (input: string): boolean => !isBlank(input);\r\n\r\n/** Reverse a string. */\r\nexport const reverseString = (input: string): string => input.split('').reverse().join('');\r\n\r\n/** Extract JIRA issue keys from a string. */\r\nexport const getJIRAIssueKeys = (input: string): string[] => {\r\n  const matches = reverseString(input).toUpperCase().match(JIRA_REGEX_MATCHER);\r\n  if (matches?.length) {\r\n    return matches.map(reverseString).reverse();\r\n  } else return [];\r\n};\r\n\r\nexport const LABELS = {\r\n  HOTFIX_PRE_PROD: 'HOTFIX-PRE-PROD',\r\n  HOTFIX_PROD: 'HOTFIX-PROD',\r\n};\r\n\r\n/** Return a hotfix label based on base branch type. */\r\nexport const getHotfixLabel = (baseBranch: string): string => {\r\n  if (baseBranch.startsWith('release/v')) return LABELS.HOTFIX_PRE_PROD;\r\n  if (baseBranch.startsWith('production')) return LABELS.HOTFIX_PROD;\r\n  return '';\r\n};\r\n\r\nexport const getJIRAClient = (baseURL: string, token: string): JIRAClient => {\r\n  const client = axios.create({\r\n    baseURL: `${baseURL}/rest/api/3`,\r\n    timeout: 2000,\r\n    headers: { Authorization: `Basic ${token}` },\r\n  });\r\n\r\n  const getIssue = async (id: string): Promise<JIRA.Issue> => {\r\n    try {\r\n      const response = await client.get<JIRA.Issue>(\r\n        `/issue/${id}?fields=project,summary,issuetype,labels,status,customfield_10016,customfield_10030`\r\n      );\r\n      return response.data;\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  const getTicketDetails = async (key: string): Promise<JIRADetails> => {\r\n    try {\r\n      const issue: JIRA.Issue = await getIssue(key);\r\n      const {\r\n        fields: {\r\n          issuetype: type,\r\n          project,\r\n          summary,\r\n          customfield_10016: estimate,\r\n          labels: rawLabels,\r\n          status: issueStatus,\r\n          customfield_10030: customers,\r\n        },\r\n      } = issue;\r\n\r\n      const labels = rawLabels.map((label) => ({\r\n        name: label,\r\n        url: `${baseURL}/issues?jql=${encodeURIComponent(\r\n          `project = ${project.key} AND labels = ${label} ORDER BY created DESC`\r\n        )}`,\r\n      }));\r\n\r\n      return {\r\n        key,\r\n        summary,\r\n        url: `${baseURL}/browse/${key}`,\r\n        status: issueStatus.name,\r\n        type: {\r\n          name: type.name,\r\n          icon: type.iconUrl,\r\n        },\r\n        project: {\r\n          name: project.name,\r\n          url: `${baseURL}/browse/${project.key}`,\r\n          key: project.key,\r\n        },\r\n        estimate: typeof estimate === 'string' || typeof estimate === 'number' ? estimate : 'N/A',\r\n        labels,\r\n        customers: Array.isArray(customers) ? customers?.map((customer) => customer) : [],\r\n      };\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  return {\r\n    client,\r\n    getTicketDetails,\r\n    getIssue,\r\n  };\r\n};\r\n\r\n/** Add the specified label to the PR. */\r\nexport const addLabels = async (client: Octokit, labelData: RestEndpointMethodTypes['issues']['addLabels']['parameters']): Promise<void> => {\r\n  try {\r\n    await client.issues.addLabels(labelData);\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (error instanceof ReferenceError) {\r\n      core.setFailed(error.message);\r\n    }\r\n    process.exit(1);\r\n  }\r\n};\r\n\r\n/** Update a PR details. */\r\nexport const updatePrDetails = async (client: Octokit, prData: RestEndpointMethodTypes['pulls']['update']['parameters']): Promise<void> => {\r\n  try {\r\n    await client.pulls.update(prData);\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (error instanceof ReferenceError) {\r\n      core.setFailed(error.message);\r\n    }\r\n    process.exit(1);\r\n  }\r\n};\r\n\r\n/** Add a comment to a PR. */\r\nexport const addComment = async (client: Octokit, comment: RestEndpointMethodTypes['issues']['createComment']['parameters']): Promise<void> => {\r\n  try {\r\n    await client.issues.createComment(comment);\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (error instanceof ReferenceError) {\r\n      core.setFailed(error.message);\r\n    }\r\n  }\r\n};\r\n\r\n/** Get a comment based on story title and PR title similarity. */\r\nexport const getPRTitleComment = (storyTitle: string, prTitle: string): string => {\r\n  const matchRange: number = similarity.compareTwoStrings(storyTitle, prTitle);\r\n  if (matchRange < 0.2) {\r\n    return `<p>\r\n    Knock Knock! 🔍\r\n  </p>\r\n  <p>\r\n    Just thought I'd let you know that your <em>PR title</em> and <em>story title</em> look <strong>quite different</strong>. PR titles\r\n    that closely resemble the story title make it easier for reviewers to understand the context of the PR.\r\n  </p>\r\n  <blockquote>\r\n    An easy-to-understand PR title a day makes the reviewer review away! 😛⚡️\r\n  </blockquote>\r\n  <table>\r\n    <tr>\r\n      <th>Story Title</th>\r\n      <td>${storyTitle}</td>\r\n    </tr>\r\n    <tr>\r\n        <th>PR Title</th>\r\n        <td>${prTitle}</td>\r\n      </tr>\r\n  </table>\r\n  <p>\r\n    Check out this <a href=\"https://www.atlassian.com/blog/git/written-unwritten-guide-pull-requests\">guide</a> to learn more about PR best-practices.\r\n  </p>\r\n  `;\r\n  } else if (matchRange >= 0.2 && matchRange <= 0.4) {\r\n    return `<p>\r\n    Let's make that PR title a 💯 shall we? 💪\r\n    </p>\r\n    <p>\r\n    Your <em>PR title</em> and <em>story title</em> look <strong>slightly different</strong>. Just checking in to know if it was intentional!\r\n    </p>\r\n    <table>\r\n      <tr>\r\n        <th>Story Title</th>\r\n        <td>${storyTitle}</td>\r\n      </tr>\r\n      <tr>\r\n          <th>PR Title</th>\r\n          <td>${prTitle}</td>\r\n        </tr>\r\n    </table>\r\n    <p>\r\n      Check out this <a href=\"https://www.atlassian.com/blog/git/written-unwritten-guide-pull-requests\">guide</a> to learn more about PR best-practices.\r\n    </p>\r\n    `;\r\n  }\r\n  return `<p>I'm a bot and I 👍 this PR title. 🤖</p>\r\n\r\n  <img src=\"https://media.giphy.com/media/XreQmk7ETCak0/giphy.gif\" width=\"400\" />`;\r\n};\r\n\r\n/**\r\n * Check if the PR is an automated one created by a bot or one matching ignore patterns supplied\r\n * via action metadata.\r\n *\r\n * @example shouldSkipBranchLint('dependabot') -> true\r\n * @example shouldSkipBranchLint('feature/update_123456789') -> false\r\n */\r\nexport const shouldSkipBranchLint = (branch: string, additionalIgnorePattern?: string): boolean => {\r\n  if (BOT_BRANCH_PATTERNS.some((pattern) => pattern.test(branch))) {\r\n    console.log(`You look like a bot 🤖 so we're letting you off the hook!`);\r\n    return true;\r\n  }\r\n\r\n  if (DEFAULT_BRANCH_PATTERNS.some((pattern) => pattern.test(branch))) {\r\n    console.log(`Ignoring check for default branch ${branch}`);\r\n    return true;\r\n  }\r\n\r\n  const ignorePattern = new RegExp(additionalIgnorePattern || '');\r\n  if (!!additionalIgnorePattern && ignorePattern.test(branch)) {\r\n    console.log(\r\n      `branch '${branch}' ignored as it matches the ignore pattern '${additionalIgnorePattern}' provided in skip-branches`\r\n    );\r\n    return true;\r\n  }\r\n\r\n  console.log(`branch '${branch}' does not match ignore pattern provided in 'skip-branches' option:`, ignorePattern);\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns true if the body contains the hidden marker. Used to avoid adding\r\n * story details to the PR multiple times.\r\n *\r\n * @example shouldUpdatePRDescription('--\\nadded_by_pr_lint\\n') -> true\r\n * @example shouldUpdatePRDescription('# some description') -> false\r\n */\r\nexport const shouldUpdatePRDescription = (\r\n  /** The PR description/body as a string. */\r\n  body?: string\r\n): boolean => typeof body !== 'string' || (typeof body === 'string' && !MARKER_REGEX.test(body));\r\n\r\n/**\r\n * Get links to labels & remove spacing so the table works.\r\n */\r\nexport const getLabelsForDisplay = (labels: JIRADetails['labels']): string => {\r\n  if (!labels || !labels.length) {\r\n    return '-';\r\n  }\r\n  const markUp = labels.map((label) => `<a href=\"${label.url}\" title=\"${label.name}\">${label.name}</a>`).join(', ');\r\n  return markUp.replace(/\\s+/, ' ');\r\n};\r\n\r\n/** Get PR description with story/issue details. */\r\nexport const getPRDescription = (body = '', details: JIRADetails): string => {\r\n  const displayKey = details.key.toUpperCase();\r\n\r\n  return `\r\n<details open>\r\n  <summary><a href=\"${details.url}\" title=\"${displayKey}\" target=\"_blank\">${displayKey}</a></summary>\r\n  <br />\r\n  <table>\r\n    <tr>\r\n      <th>Summary</th>\r\n      <td>${details.summary}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>Type</th>\r\n      <td>\r\n        <img alt=\"${details.type.name}\" src=\"${details.type.icon}\" />\r\n        ${details.type.name}\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th>Status</th>\r\n      <td>${details.status}</td>\r\n    </tr>\r\n    <tr>\r\n      <th>Customers</th>\r\n      <td>${details.customers.join(', ')}</td>\r\n    <tr>\r\n      <th>Labels</th>\r\n      <td>${getLabelsForDisplay(details.labels)}</td>\r\n    </tr>\r\n  </table>\r\n</details>\r\n<!--\r\n  do not remove this marker as it will break jira-lint's functionality.\r\n  ${HIDDEN_MARKER}\r\n-->\r\n\r\n---\r\n\r\n${body}`;\r\n};\r\n\r\n/** Check if a PR is considered \"huge\". */\r\nexport const isHumongousPR = (additions: number, threshold: number): boolean =>\r\n  typeof additions === 'number' && additions > threshold;\r\n\r\n/** Get the comment body for very huge PR. */\r\nexport const getHugePrComment = (\r\n  /** Number of additions. */\r\n  additions: number,\r\n  /** Threshold of additions allowed. */\r\n  threshold: number\r\n): string =>\r\n  `<p>This PR is too huge for one to review :broken_heart: </p>\r\n  <img src=\"https://media.giphy.com/media/26tPskka6guetcHle/giphy.gif\" width=\"400\" />\r\n    <table>\r\n      <tr>\r\n          <th>Additions</th>\r\n          <td>${additions} :no_good_woman: </td>\r\n      </tr>\r\n      <tr>\r\n          <th>Expected</th>\r\n          <td>:arrow_down: ${threshold}</td>\r\n        </tr>\r\n    </table>\r\n    <p>\r\n    Consider breaking it down into multiple small PRs.\r\n    </p>\r\n    <p>\r\n      Check out this <a href=\"https://www.atlassian.com/blog/git/written-unwritten-guide-pull-requests\">guide</a> to learn more about PR best-practices.\r\n    </p>\r\n  `;\r\n\r\n/** Get the comment body for pr with no JIRA id in the branch name. */\r\nexport const getNoIdComment = (branch: string): string => {\r\n  return `<p> A JIRA Issue ID is missing from your branch name! 🦄</p>\r\n<p>Your branch: ${branch}</p>\r\n<p>If this is your first time contributing to this repository - welcome!</p>\r\n<hr />\r\n<p>Please refer to <a href=\"https://github.com/cleartax/jira-lint\">jira-lint</a> to get started.\r\n<p>Without the JIRA Issue ID in your branch name you would lose out on automatic updates to JIRA via SCM; some GitHub status checks might fail.</p>\r\nValid sample branch names:\r\n\r\n  ‣ feature/shiny-new-feature--mojo-10'\r\n  ‣ 'chore/changelogUpdate_mojo-123'\r\n  ‣ 'bugfix/fix-some-strange-bug_GAL-2345'\r\n`;\r\n};\r\n\r\n/** Check if jira issue status validation is enabled then compare the issue status will the allowed statuses. */\r\nexport const isIssueStatusValid = (\r\n  shouldValidate: boolean,\r\n  allowedIssueStatuses: string[],\r\n  details: JIRADetails\r\n): boolean => {\r\n  if (!shouldValidate) {\r\n    core.info('Skipping Jira issue status validation as shouldValidate is false');\r\n    return true;\r\n  }\r\n\r\n  return allowedIssueStatuses.includes(details.status);\r\n};\r\n\r\n/** Get the comment body for very huge PR. */\r\nexport const getInvalidIssueStatusComment = (\r\n  /** Number of additions. */\r\n  details: JIRADetails,\r\n  /** Threshold of additions allowed. */\r\n  allowedStatuses: string\r\n): string => {\r\n  const displayKey = details.key.toUpperCase();\r\n  return `\r\n  <summary><a href=\"${details.url}\" title=\"${displayKey}\" target=\"_blank\">${displayKey}</a></summary>\r\n  <p>:broken_heart: The detected issue is not in one of the allowed statuses :broken_heart: </p>    \r\n   <table>\r\n     <tr>\r\n        <th>Detected Status</th>\r\n        <td>${details.status}</td>\r\n        <td>:x:</td>\r\n     </tr>\r\n     <tr>\r\n        <th>Allowed Statuses</th>\r\n        <td>${allowedStatuses}</td>\r\n        <td>:heavy_check_mark:</td>\r\n      </tr>\r\n   </table>\r\n   <p>Please ensure your jira story is in one of the allowed statuses</p>\r\n  `;\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(399);\n",""],"names":[],"sourceRoot":""}